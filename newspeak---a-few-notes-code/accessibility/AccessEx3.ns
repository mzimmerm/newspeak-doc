Newspeak3
'Root'
class AccessEx3 = () (
  class I1 = () (
    m1 = (^42)
    public m2 = (^self m1)
    )
  class I2 = I1 () (
    m1 = (^91)
  )
  public m0 = (
    (* Note1: returns 91 - from code in I1>>#m2 = (^self m1) - because self at runtime is instanceof I2. 
    This is an example where lexical scope of the line with "self m1" is I1, but instance of self is different, I2 . 
    *)

    (* Note2: Worked example of accessibility: why is the expression "I2 new m2" allowed and working here? We have to establish allowed access of each reference and message send.

    1. Why may I2 be accessed here? Answer: Slide 63 - An object (this, is instance of AccessEx3 at runtime) may access a private or protected member  (I2) only if : a) DOWN: member (I2) is a member of the object - this is the situation here, I2 is a member of AccessEx3. b) UP member is a lexically visible member of enclosing object 

    2. Why may I2 send the message "new" here? Answer:  This is not clearly defined; but basically, when looking, in item 1 above, at 'Why may I2 be accessed here?' the rule actually applies not to the class I2 but to the factory method 'I2 new' - the 'I2 new' is a member of AccessEx3!!

    3. Why may the instance "I2 new" send message "I1>>#m2"? This is harder.

    First of all , if I1>>#m2 was not public (if it was protected), the message send to "m2" would result in an access exception. Reason is that "I1>>#m2" (or I2>>#m2 which extends from it) is not in the lexical scope UP from the line '^I2 new m2' (Slide 62)! Slide 63 talks about access to protected members ('an object can access private or protected members only if') but the 'object' there is object where the line '^I2 new m2' is located - instance of 'AccessEx3'! Clearly, 'I1>>#m2' is not a member of 'AccessEx3' neither is it a member of enclosing object. 'I1>>#m2' is DOWN  from 'AccessEx3', so to be lexically visible it must be made PUBLIC, and then Slide 62 allows access through the DOWN rule.

     - Make m2 public is the only way to make this method work.
     - Move "m2 to I2 NO THIS DOES NOT DO!
  *)
  ^I2 new m2.
  )
)
